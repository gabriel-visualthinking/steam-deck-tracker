{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/sessionStore.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/version.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/types.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/version.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","../../node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","../../node_modules/es5-ext/global.js","../../node_modules/websocket/lib/browser.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/SupabaseStorageClient.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../src/supabaseClient.js","../../src/Radio.svelte","../../src/Auth.svelte","../../src/Profile.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const user = writable(false);","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\nexport const STORAGE_KEY = 'supabase.auth.token';\n//# sourceMappingURL=constants.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher = crossFetch, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '1.22.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 60 * 1000;\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb:token',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    res.setHeader('Set-Cookie', strCookies);\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","export function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookie, deleteCookie } from './lib/cookies';\nimport { expiresAt } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = fetch;\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/magiclink${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     */\n    sendMobileOTP(phone, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, { phone, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Mobile OTP to be verified\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    setAuthCookie(req, res) {\n        var _a;\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookie(req, res, {\n                name: this.cookieName(),\n                value: session.access_token,\n                domain: this.cookieOptions.domain,\n                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                path: this.cookieOptions.path,\n                sameSite: this.cookieOptions.sameSite,\n            });\n        }\n        if (event === 'SIGNED_OUT')\n            deleteCookie(req, res, this.cookieName());\n        res.status(200).json({});\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const token = req.cookies[this.cookieName()];\n                if (!token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error } = yield this.getUser(token);\n                if (error)\n                    throw error;\n                return { token, user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                throw new Error(`You must provide either an email, phone number or a third-party provider.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ phone, token }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyMobileOTP(phone, token, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: null });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession || !currentSession.user) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            // console.debug('Auth multi-tab support is disabled.')\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._recoverAndRefresh();\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        Object.assign(this, builder);\n        this.fetch = builder.fetch || crossFetch;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.36.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        this.channel.on(this.refEvent, (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        });\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel.off(this.refEvent);\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, } from './lib/constants';\nimport Timer from './lib/timer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport Serializer from './lib/serializer';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = WebSocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        let chan = new RealtimeSubscription(topic, chanParams, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            else if (event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this._resetHeartbeat();\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        try {\n            this.channels.forEach((channel) => {\n                token && channel.updateJoinPayload({ user_token: token });\n                if (channel.joinedOnce && channel.isJoined()) {\n                    channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n                }\n            });\n        }\n        catch (error) {\n            console.log('setAuth error', error);\n        }\n    }\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this._resetHeartbeat();\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _resetHeartbeat() {\n        this.pendingHeartbeatRef = null;\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, }) {\n        super(url, { headers, schema, fetch });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher = crossFetch, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './fetch';\nimport { DEFAULT_HEADERS } from './constants';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = fetch;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport fetch from 'cross-fetch';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = fetch;\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file, optionally renaming it at the same time.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed url to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = this.headers;\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://smujntqlaxarcyriwzxd.supabase.co'\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNtdWpudHFsYXhhcmN5cml3enhkIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDQ0MTU5NTQsImV4cCI6MTk1OTk5MTk1NH0.ixSeGY-wRpwx8FEqzIQdevYqPlxR4qO6F85f4kEncxk'\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)","<script>\n    // based on suggestions from:\n    // Sami Keijonen https://webdesign.tutsplus.com/tutorials/how-to-make-custom-accessible-checkboxes-and-radio-buttons--cms-32074\n    // and Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n  \n    export let options;\n    export let legend = \"\";\n    export let userSelected = options[0].value;\n      export let fontSize = 16;\n      export let flexDirection = 'column'\n      \n      const uniqueID = Math.floor(Math.random() * 100)\n  \n    const slugify = (str = \"\") =>\n      str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"\");\n  </script>\n  \n  <div role=\"radiogroup\" \n                   class=\"group-container\"\n                   aria-labelledby={`label-${uniqueID}`}\n                   style=\"font-size:{fontSize}px; flex-direction:{flexDirection}\" \n                   id={`group-${uniqueID}`}>\n          <div class=\"legend\" \n                           id={`label-${uniqueID}`}>{legend}\n                  </div>\n    {#each options as { value, label }}\n      <input\n        class=\"sr-only\"\n        type=\"radio\"\n        id={slugify(label)}\n        bind:group={userSelected}\n        value={value} />\n      <label for={slugify(label)}> {label} </label>\n    {/each}\n  </div>\n  \n  <style>\n              :root {\n          --accent-color: CornflowerBlue;\n          --gray: #ccc;\n      }\n      \n     .group-container {\n        border-radius: 2px;\n        display: flex;\n        flex-direction: row;\n      }\n  \n    .legend {\n      font-weight: bold;\n    }\n    label {\n      user-select: none;\n      line-height: 1.2em;\n    }\n  \n    .sr-only {\n      position: absolute;\n      clip: rect(1px, 1px, 1px, 1px);\n      padding: 0;\n      border: 0;\n      height: 1px;\n      width: 1px;\n      overflow: hidden;\n    }\n  \n    input[type=\"radio\"] {\n      position: absolute;\n    }\n  \n    input[type=\"radio\"] + label {\n      display: block;\n      position: relative;\n      text-align: left;\n    }\n  \n    input[type=\"radio\"] + label::before {\n        content: \"\";\n        position: relative;\n        display: inline-block;\n        margin-right: 0.5em;\n        width: 1em;\n        height: 1em;\n        background: transparent;\n        border: 1px solid var(--gray, #ccc);\n        border-radius: 50%;\n        top: 0.2em;\n    }\n  \n    input[type=\"radio\"]:checked + label::before {\n      border: 1px solid var(--gray, #ccc);\n      border-radius: 50%;\n    }\n  \n    input[type=\"radio\"] + label::after {\n      content: \"\";\n      position: absolute;\n      display: inline-block;\n      width: 0.5em;\n      height: 0.5em;\n      top: 0.45em;\n      left: 0.25em;\n      background: var(--accent-color, #282828);\n      border: 1px solid var(--accent-color, #282828);\n      border-radius: 50%;\n      transform: scale(0);\n    }\n  \n    input[type=\"radio\"]:checked + label::after {\n      opacity: 1;\n      transform: scale(1);\n    }\n  \n    input[type=\"radio\"]:focus + label::before {\n      box-shadow: 0 0 0 1px var(--accent-color, #282828);\n      border-radius: 50%;\n    }  \n    \n    input[type=\"radio\"]:disabled + label {\n      color: darken(var(--gray, #ccc), 10);\n    }\n  \n    input[type=\"radio\"]:disabled + label::before {\n      background: var(--gray, #ccc);\n    } \n    /* gravy */\n  \n  \n    input[type=\"radio\"] + label::before {\n        transition: background 0.3s ease-out;\n    }\n  \n    input[type=\"radio\"]:checked + label::before {\n      transition: background 0.3s ease-in;\n    }\n  \n    input[type=\"radio\"] + label::after {\n      transition: transform 0.2s ease-out;\n    }\n  \n    input[type=\"radio\"]:checked + label::after {\n      transition: transform 0.2s ease-in;\n    }\n  \n    input[type=\"radio\"]:focus + label::before {\n      box-shadow: 0 0px 8px var(--accent-color, #282828);\n      border-radius: 50%;\n    }\n  \n  </style>","<script>\n    import {supabase} from \"./supabaseClient\"\n    import Radio from './Radio.svelte'\n  \n    let loading = false\n    let signUp = false\n    let email, password, confirmPassword;\n\n    const radioOptions = [{\n        value: false,\n        label: \"Log In\"\n    },{\n        value: true,\n        label: \"Sign Up\"\n    }]\n  \n    const handleLogin = async () => {\n      try {\n        loading = true\n        const { user, error } = await supabase.auth.signIn({\n            email: email,\n            password: password,\n        })\n        if (error) throw error\n      } catch (error) {\n        alert(error.error_description || error.message)\n      } finally {\n        loading = false\n      }\n    }\n\n    const handleSignUp = async () => {\n        if (confirmPassword !== password) {\n            alert(\"The passwords don't match!\")\n            return\n        }\n        try {\n            loading = true\n            const { user, session, error } = await supabase.auth.signUp({\n                email: email,\n                password: password\n            },{redirectTo: window.location.href})\n            if (error) throw error\n            alert(\"Please verify your email address now, before trying to log in...\")\n        } catch (error) {\n            alert(error.error_description || error.message)\n        } finally {\n            loading = false\n        }\n    }\n\n  </script>\n  \n  <form class=\"row flex flex-center\" on:submit|preventDefault={signUp ? handleSignUp : handleLogin}>\n    <div class=\"col-6 form-widget\">\n      <h1 class=\"header\">Supabase + Svelte</h1>\n      <Radio options={radioOptions} fontSize={16} bind:userSelected={signUp}/>\n      <p class=\"description\">V 1.0</p>\n      <div>\n        <div>\n            <input\n          class=\"inputField\"\n          type=\"email\"\n          placeholder=\"Your email\"\n          bind:value={email}\n        />\n        </div>\n        <div>\n            <input\n          class=\"inputField\"\n          type=\"password\"\n          placeholder=\"Your password\"\n          bind:value={password}\n        />\n        </div>\n        {#if signUp}\n            <div>\n                <input\n            class=\"inputField\"\n            type=\"password\"\n            placeholder=\"Confirm your password\"\n            bind:value={confirmPassword}\n            />\n            </div>\n        {/if}\n      </div>\n      <div>\n        <input type=\"submit\" class='button block' value={loading ? \"Loading\" : signUp ? \"Sign Up\" : \"Log In\"} disabled={loading} />\n      </div>\n    </div>\n  </form>","<script>\n    import { supabase } from './supabaseClient'\n    import { user } from './sessionStore'\n  \n    let loading = true\n    let username = null\n    let website = null\n    let avatar_url = null\n  \n    const getProfile = async () => {\n      try {\n        loading = true\n        const user = supabase.auth.user()\n  \n        let { data, error, status } = await supabase\n          .from('profiles')\n          .select(`username, website, avatar_url`)\n          .eq('id', user.id)\n          .single()\n  \n        if (error && status !== 406) throw error\n  \n        if (data) {\n          username = data.username\n          website = data.website\n          avatar_url = data.avatar_url\n        }\n      } catch (error) {\n        alert(error.message)\n      } finally {\n        loading = false\n      }\n    }\n  \n    async function updateProfile() {\n      try {\n        loading = true\n        const user = supabase.auth.user()\n  \n        const updates = {\n          id: user.id,\n          username,\n          website,\n          avatar_url,\n          updated_at: new Date(),\n        }\n  \n        let { error } = await supabase.from('profiles').upsert(updates, {\n          returning: 'minimal', // Don't return the value after inserting\n        })\n  \n        if (error) throw error\n      } catch (error) {\n        alert(error.message)\n      } finally {\n        loading = false\n      }\n    }\n  \n    async function signOut() {\n      try {\n        loading = true\n        let { error } = await supabase.auth.signOut()\n        if (error) throw error\n      } catch (error) {\n        alert(error.message)\n      } finally {\n        loading = false\n      }\n      \n    }\n  </script>\n  \n  <form use:getProfile class=\"form-widget\" on:submit|preventDefault={updateProfile}>\n    <div>\n      <label for=\"email\">Email</label>\n      <input id=\"email\" type=\"text\" value={$user.email} disabled />\n    </div>\n    <div>\n      <label for=\"username\">Name</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        bind:value={username}\n      />\n    </div>\n    <div>\n      <label for=\"website\">Website</label>\n      <input\n        id=\"website\"\n        type=\"website\"\n        bind:value={website}\n      />\n    </div>\n  \n    <div>\n      <input type=\"submit\" class=\"button block primary\" value={loading ? 'Loading ...' : 'Update'} disabled={loading}/>\n    </div>\n  \n    <div>\n      <button class=\"button block\" on:click={signOut} disabled={loading}>\n        Sign Out\n      </button>\n    </div>\n  </form>","<script>\n    import {user} from \"./sessionStore\"\n    import {supabase} from \"./supabaseClient\"\n    import Auth from \"./Auth.svelte\"\n    import Profile from \"./Profile.svelte\"\n\n    user.set(supabase.auth.user())\n\n    supabase.auth.onAuthStateChange((_, session) => {\n        user.set(session.user)\n    })\n</script>\n\n<div class=\"container\" style=\"padding: 50px 0 100px 0;\">\n    {#if $user}\n        <Profile />\n    {:else}\n        <Auth />\n    {/if}\n</div>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","user","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","writable","DEFAULT_HEADERS","global","self","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","toString","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","Error","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","hasOwnProperty","thisArg","values","entries","methods","Request","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","module","__awaiter","_arguments","P","generator","fulfilled","step","apply","_getErrorMessage","msg","error_description","stringify","_handleRequest","fetcher","crossFetch","params","assign","_getRequestParams","noResolveJson","catch","handleError","post","put","STORAGE_KEY","COOKIE_OPTIONS","lifetime","domain","path","sameSite","serializeCookie","cookie","secure","_a","_b","_c","val","opt","enc","encodeURIComponent","fieldContentRegExp","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","serialize","Date","now","setCookies","req","res","cookies","strCookies","host","endsWith","isSecureEnvironment","previousCookies","getHeader","setHeader","setCookie","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","href","results","RegExp","exec","GoTrueApi","cookieOptions","_createRequestHeaders","jwt","cookieName","getUrlForProvider","provider","urlParams","redirectTo","scopes","signUpWithEmail","email","password","queryString","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","sendMagicLinkEmail","sendMobileOTP","signOut","verifyMobileOTP","token","redirect_to","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","access_token","deleteCookie","generateLink","createUser","attributes","listUsers","users","getUserById","uid","getUserByCookie","getUser","updateUserById","deleteUser","remove","updateUser","globalThis","configurable","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","SupabaseAuthClient","stateChangeEmitters","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","verifyOTP","refreshSession","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","r","random","subscription","confirmed_at","email_confirmed_at","phone_confirmed_at","getItem","log","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","refreshTokenTimer","clearTimeout","removeItem","setTimeout","unref","newSession","newValue","super","PostgrestBuilder","builder","shouldThrowOnError","throwOnError","onfulfilled","onrejected","schema","includes","count","isReturnMinimal","countHeader","match","contentRange","_d","fetchError","details","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","ignoreDuplicates","PostgrestRpcBuilder","rpc","PostgrestClient","auth","table","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Push","channel","payload","timeout","sent","timeoutTimer","ref","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","topic","updatePayload","receive","makeRef","replyEventName","on","_cancelTimeout","_matchReceive","trigger","destroy","off","h","RealtimeSubscription","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","close","bind","canPush","isJoined","updateJoinPayload","leaving","leavePush","leave","onMessage","isMember","leaveOpenTopic","joining","handledPayload","isErrored","_globalThis","naiveFallback","__global__","require$$0","NativeWebSocket","WebSocket","MozWebSocket","W3CWebSocket","uri","protocols","prop","w3cwebsocket","version","websocket_version","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","connecting","closing","chanParams","chan","rawMessage","_resetHeartbeat","_appendParams","vsn","newRef","user_token","dupChannel","_flushSendBuffer","_triggerChanError","prefix","setInterval","_sendHeartbeat","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","Transformers.convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","errors","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","createSignedUrl","signedURL","download","getPublicUrl","publicURL","paths","prefixes","list","SupabaseStorageClient","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","storage","_getAuthHeaders","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","all","_closeSubscription","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","authHeaders","Authorization","apikey","authBearer","previousAccessToken","_handleTokenChanged","source","changedAccessToken","supabase","createClient","iterations","legend","userSelected","fontSize","flexDirection","uniqueID","confirmPassword","loading","label","alert","action_result","username","website","avatar_url","updates","updated_at"],"mappings":"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"}